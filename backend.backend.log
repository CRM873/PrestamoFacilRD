[32m[Nest] 25684  - [39m08/15/2025, 3:03:42 AM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 25684  - [39m08/15/2025, 3:03:42 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDatabaseModule dependencies initialized[39m[38;5;3m +22ms[39m
[32m[Nest] 25684  - [39m08/15/2025, 3:03:42 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 25684  - [39m08/15/2025, 3:03:42 AM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mEventsModule dependencies initialized[39m[38;5;3m +0ms[39m
[31m[Nest] 25684  - [39m08/15/2025, 3:03:42 AM [31m  ERROR[39m [38;5;3m[ExceptionHandler] [39mUnknownDependenciesException [Error]: Nest can't resolve dependencies of the PaymentsService (PaymentRepository, PaymentAllocationRepository, ?, CustomersService, InvoicesService, EventsGateway). Please make sure that the argument "InvoiceRepository" at index [2] is available in the PaymentsModule context.

Potential solutions:
- Is PaymentsModule a valid NestJS module?
- If "InvoiceRepository" is a provider, is it part of the current PaymentsModule?
- If "InvoiceRepository" is exported from a separate @Module, is that module imported within PaymentsModule?
  @Module({
    imports: [ /* the Module containing "InvoiceRepository" */ ]
  })

    at Injector.lookupComponentInParentModules [90m(/workspace/backend/[39mnode_modules/[4m.pnpm[24m/@nestjs+core@11.1.6_@nestjs+common@11.1.6_class-transformer@0.5.1_class-validator@0.14._eee9c3e244596ac016a0e95477e40580/node_modules/[4m@nestjs[24m/core/injector/injector.js:286:19[90m)[39m
    at async resolveParam [90m(/workspace/backend/[39mnode_modules/[4m.pnpm[24m/@nestjs+core@11.1.6_@nestjs+common@11.1.6_class-transformer@0.5.1_class-validator@0.14._eee9c3e244596ac016a0e95477e40580/node_modules/[4m@nestjs[24m/core/injector/injector.js:141:38[90m)[39m
    at async Promise.all (index 2)
    at async Injector.resolveConstructorParams [90m(/workspace/backend/[39mnode_modules/[4m.pnpm[24m/@nestjs+core@11.1.6_@nestjs+common@11.1.6_class-transformer@0.5.1_class-validator@0.14._eee9c3e244596ac016a0e95477e40580/node_modules/[4m@nestjs[24m/core/injector/injector.js:169:27[90m)[39m
    at async Injector.loadInstance [90m(/workspace/backend/[39mnode_modules/[4m.pnpm[24m/@nestjs+core@11.1.6_@nestjs+common@11.1.6_class-transformer@0.5.1_class-validator@0.14._eee9c3e244596ac016a0e95477e40580/node_modules/[4m@nestjs[24m/core/injector/injector.js:75:13[90m)[39m
    at async Injector.loadProvider [90m(/workspace/backend/[39mnode_modules/[4m.pnpm[24m/@nestjs+core@11.1.6_@nestjs+common@11.1.6_class-transformer@0.5.1_class-validator@0.14._eee9c3e244596ac016a0e95477e40580/node_modules/[4m@nestjs[24m/core/injector/injector.js:103:9[90m)[39m
    at async [90m/workspace/backend/[39mnode_modules/[4m.pnpm[24m/@nestjs+core@11.1.6_@nestjs+common@11.1.6_class-transformer@0.5.1_class-validator@0.14._eee9c3e244596ac016a0e95477e40580/node_modules/[4m@nestjs[24m/core/injector/instance-loader.js:56:13
    at async Promise.all (index 3)
    at async InstanceLoader.createInstancesOfProviders [90m(/workspace/backend/[39mnode_modules/[4m.pnpm[24m/@nestjs+core@11.1.6_@nestjs+common@11.1.6_class-transformer@0.5.1_class-validator@0.14._eee9c3e244596ac016a0e95477e40580/node_modules/[4m@nestjs[24m/core/injector/instance-loader.js:55:9[90m)[39m
    at async [90m/workspace/backend/[39mnode_modules/[4m.pnpm[24m/@nestjs+core@11.1.6_@nestjs+common@11.1.6_class-transformer@0.5.1_class-validator@0.14._eee9c3e244596ac016a0e95477e40580/node_modules/[4m@nestjs[24m/core/injector/instance-loader.js:40:13 {
  type: [32m'PaymentsService'[39m,
  context: {
    index: [33m2[39m,
    dependencies: [
      [32m'PaymentRepository'[39m,
      [32m'PaymentAllocationRepository'[39m,
      [32m'InvoiceRepository'[39m,
      [36m[class CustomersService][39m,
      [36m[class InvoicesService][39m,
      [36m[class EventsGateway][39m
    ],
    name: [32m'InvoiceRepository'[39m
  },
  metadata: {
    id: [32m'bdbb0a88c38726cc16a27'[39m
  },
  moduleRef: {
    id: [32m'55d296681af416d1c2651'[39m
  }
}
